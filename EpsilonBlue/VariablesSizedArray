/*
Consider an n-element array, a , where each index i in the array contains a reference to an array of k_i integers (where the value of  varies from array to array). 
See the Explanation section below for a diagram.

Given , you must answer  queries. Each query is in the format i j, where  denotes an index in array  and  denotes an index in the array located at . For each query, find and print the value of element  in the array at location  on a new line.

Click here to know more about how to create variable sized arrays in C++.

Input Format

The first line contains two space-separated integers denoting the respective values of  (the number of variable-length arrays) and  (the number of queries).
Each line  of the  subsequent lines contains a space-separated sequence in the format k a[i]0 a[i]1 â€¦ a[i]k-1 describing the -element array located at .
Each of the  subsequent lines contains two space-separated integers describing the respective values of  (an index in array ) and  (an index in the array referenced by ) for a query.

source:https://www.hackerrank.com/challenges/variable-sized-arrays/problem?isFullScreen=true

*/
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    int n, q, size, value, which, index;

    // grabing the values of n and q
    cin >> n >> q;
    
    //setting vector of vector<int> arr
    vector<vector<int>> nVec;
    
    
    
    for(int i = 0; i < n; ++i){                //setting first loop to be the number of arr
        cin >> size;                           //grabbing the size of the initial arr
        vector<int> iVec;                      // initializing vector to grasp values
        for(int j =0; j < size; j++){          // running through the values of getign the size.
            cin >> value;
            iVec.push_back(value);            // pushig the values in 
        }
        nVec.push_back(iVec);                 // pushing the vector into the VECTOR of INT
    }
   
   for(int k =0 ;k <q ; ++k){                // running through the que
       cin >>which >> index;                 // grasping want info is wanted
       cout << nVec[which][index] <<endl;    // displaying out
   } 
  
